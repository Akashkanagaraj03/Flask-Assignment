{"definitions":{"User":{"properties":{"age":{"description":"User age","type":"integer"},"city":{"description":"User city","type":"string"},"company_name":{"description":"User company name","type":"string"},"email":{"description":"User email address","type":"string"},"first_name":{"description":"User first name","type":"string"},"id":{"description":"User ID","type":"integer"},"last_name":{"description":"User last name","type":"string"},"state":{"description":"User state","type":"string"},"web":{"description":"User web address","type":"string"},"zip":{"description":"User zip code","type":"string"}},"required":[],"type":"object"}},"info":{"description":"powered by Flasgger","termsOfService":"/tos","title":"A swagger API","version":"0.0.1"},"paths":{"/":{"get":{"description":"This endpoint checks whether the user is logged in or not.","responses":{"200":{"description":"The user is logged in and the welcome message is returned."},"401":{"description":"User is not logged in, prompts to log in via POST to /login."}},"summary":"End Point fetches our login status","tags":["Auth"]}},"/api/summary":{"get":{"description":"Fetches statistics for the users in the database, including data like average age, city and company counts, and age ranges.","parameters":[{"description":"Authorization token for access control.","in":"header","name":"Authorization","required":true,"type":"string"}],"responses":{"200":{"description":"Statistics retrieved successfully","schema":{"properties":{"age_ranges":{"items":{"properties":{"age_range":{"description":"The age range.","type":"string"},"user_count":{"description":"The count of users within that age range.","type":"integer"}},"type":"object"},"type":"array"},"average_age":{"description":"The average age of the users.","type":"number"},"count_by_city":{"items":{"properties":{"city":{"description":"The name of the city.","type":"string"},"user_count":{"description":"The count of users from that city.","type":"integer"}},"type":"object"},"type":"array"},"count_by_company":{"items":{"properties":{"company":{"description":"The name of the company.","type":"string"},"user_count":{"description":"The count of users working at that company.","type":"integer"}},"type":"object"},"type":"array"},"total_cities":{"description":"Total number of unique cities.","type":"integer"},"total_companies":{"description":"Total number of unique companies.","type":"integer"}},"type":"object"}},"401":{"description":"Unauthorized due to invalid token."},"500":{"description":"Server error while fetching statistics."}},"summary":"Retrieves statistics about the users in the database.","tags":["Users"]}},"/api/users":{"get":{"description":"This endpoint retrieves user records with options for pagination, sorting, and searching by first_name, last_name, or city.","parameters":[{"description":"Page number for paginated results.","in":"query","name":"page","required":false,"schema":{"default":1,"type":"integer"}},{"description":"Number of results per page.","in":"query","name":"limit","required":false,"schema":{"default":5,"type":"integer"}},{"description":"Field to sort by (can include \"-\" for descending order, e.g., \"-age\").","in":"query","name":"sort","required":false,"schema":{"default":"id","type":"string"}},{"description":"Partial text to search users by first_name, last_name, or city.","in":"query","name":"search","required":false,"schema":{"default":"","type":"string"}}],"responses":{"200":{"description":"Users retrieved successfully"},"400":{"description":"Bad request due to missing or invalid parameters."},"500":{"description":"Server error while retrieving users."}},"summary":"Endpoint to fetch user records with support for pagination, sorting, and searching","tags":["Users"]},"post":{"description":"This endpoint allows the creation of new user records. The user data is passed in the body, and authorization is required through the Authorization header.","parameters":[{"description":"Authorization token for access control.","in":"header","name":"Authorization","required":true,"schema":{"type":"string"}},{"description":"List of user objects to create new users.","in":"body","name":"user_data","required":true,"schema":{"items":{"$ref":"#/definitions/User"},"type":"array"}}],"responses":{"200":{"description":"User created successfully","schema":{"items":{"$ref":"#/definitions/User"},"type":"array"}},"400":{"description":"Invalid user data (invalid JSON or missing fields)."},"401":{"description":"Unauthorized access due to invalid or missing token."},"500":{"description":"Server error while creating the user."}},"summary":"Endpoint to create a new user record","tags":["Users"]}},"/api/users/{id_}":{"delete":{"description":"Deletes a user record by their ID.","parameters":[{"description":"ID of the user to delete.","in":"path","name":"id_","required":true,"type":"integer"},{"description":"Authorization token for access control.","in":"header","name":"Authorization","required":true,"type":"string"}],"responses":{"200":{"description":"User deleted successfully"},"401":{"description":"Unauthorized access due to invalid or missing token."},"404":{"description":"User not found."},"500":{"description":"Server error while deleting the user."}},"summary":"Deletes a user record by ID.","tags":["Users"]},"get":{"description":"Fetches a user record by ID.","parameters":[{"description":"ID of the user to retrieve.","in":"path","name":"id_","required":true,"type":"integer"},{"description":"Authorization token for access control.","in":"header","name":"Authorization","required":true,"type":"string"}],"responses":{"200":{"description":"User retrieved successfully","schema":{"$ref":"#/definitions/User"}},"401":{"description":"Unauthorized due to invalid token."},"404":{"description":"User not found."},"500":{"description":"Server error while retrieving user."}},"summary":"Fetches a user record by ID.","tags":["Users"]},"patch":{"description":"Updates selected fields of a user record by their ID.","parameters":[{"description":"ID of the user to update.","in":"path","name":"id_","required":true,"type":"integer"},{"description":"Authorization token for access control.","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"User data with the fields to be updated.","in":"body","name":"user_data","required":true,"schema":{"$ref":"#/definitions/User"},"type":"object"}],"responses":{"200":{"description":"User updated successfully","schema":{"$ref":"#/definitions/User"}},"400":{"description":"Invalid user data (invalid JSON or missing fields)."},"401":{"description":"Unauthorized access due to invalid or missing token."},"404":{"description":"User not found."},"500":{"description":"Server error while updating the user."}},"summary":"Updates specific fields of an existing user by their ID.","tags":["Users"]},"put":{"description":"Updates an existing user record by their ID.","parameters":[{"description":"ID of the user to update.","in":"path","name":"id_","required":true,"type":"integer"},{"description":"Authorization token for access control.","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"User data to update the existing user.","in":"body","name":"user_data","required":true,"schema":{"$ref":"#/definitions/User"},"type":"object"}],"responses":{"200":{"description":"User updated successfully","schema":{"$ref":"#/definitions/User"}},"400":{"description":"Invalid user data (invalid JSON or missing fields)."},"401":{"description":"Unauthorized access due to invalid or missing token."},"404":{"description":"User not found."},"500":{"description":"Server error while updating the user."}},"summary":"Updates an existing user by their ID.","tags":["Users"]}},"/check_auth":{"get":{"description":"This endpoint verifies the validity of the JWT token passed in the Authorization header.","parameters":[{"description":"JWT token in the Authorization header to verify authentication.","in":"header","name":"Authorization","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"The JWT token is valid, authentication is successful."},"400":{"description":"Missing or improperly formatted JWT token in the Authorization header."},"401":{"description":"Invalid or expired JWT token, authentication failed."}},"summary":"Endpoint to check JWT authentication status","tags":["Auth"]}}},"swagger":"2.0"}
